plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url = "https://jitpack.io" } // Arrowhead, Dimensional Reverb, Step Height Entity Attribute
    maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
    maven { url = "https://maven.terraformersmc.com/" } // Modmenu, EMI
    maven { url = "https://maven.nucleoid.xyz/" } // Common Protection API
    maven { url = "https://maven.blamejared.com" } // Patchouli
    maven { url = "https://maven.ladysnake.org/releases" } // Cardinal Components API
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release/" } // Entity Reach Attribute
    maven { url = "https://api.modrinth.com/maven" } // Revelationary, Additional Entity Attributes, Fractal Lib, Colorful Hearts
    maven { url = "https://cfa2.cursemaven.com" }
    maven { url = "https://repo.unascribed.com" } // Ears API
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation ("maven.modrinth:Revelationary:1.3.6+1.20.1")
    modImplementation ("maven.modrinth:Spectrum:1.7.7")

    implementation include("org.jgrapht:jgrapht-core:1.5.1")
    implementation include("org.jheaps:jheaps:0.13")

    // Some other dependency is adding annotations, and it throws an error without this
    compileOnly ("com.demonwav.mcdev:annotations:1.0")

    // fabric & api
    minecraft ("com.mojang:minecraft:${project.minecraft_version}")
    mappings ("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation ("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    modImplementation("maven.modrinth:journeymap:${journey_version}")

    // mine
    modImplementation ("maven.modrinth:Revelationary:${project.revelationary_version}")
    modImplementation include("maven.modrinth:AdditionalEntityAttributes:${project.additional_entity_attributes_version}")
    modImplementation include("com.github.DaFuqs:Arrowhead:${project.arrowhead_version}")
    modImplementation include("com.github.DaFuqs:DimensionalReverb:${project.dimensional_reverb_version}")
    modImplementation include("maven.modrinth:fractal-lib:${project.fractal_version}")

    // we need a bit of concern
    modImplementation include("com.github.devs-immortal:Incubus-Core:${project.incubus_core_version}")

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") { exclude(group: "net.fabricmc.fabric-api") }
    modApi("dev.architectury:architectury-fabric:${project.architectury_version}") { exclude(group: "net.fabricmc.fabric-api") }
    modApi("com.terraformersmc:modmenu:${project.modmenu_version}")

    modImplementation ("eu.pb4:common-protection-api:${project.cpa_version}")

    // https://maven.blamejared.com/vazkii/patchouli/Patchouli/
    modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"

    // https://github.com/shedaniel/RoughlyEnoughItems
    modCompileOnly ("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}")

    // https://github.com/emilyploszaj/emi
    modCompileOnly ("dev.emi:emi-fabric:${emi_version}")

    switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
        case "rei": modLocalRuntime("me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"); break
        case "emi": modLocalRuntime("dev.emi:emi-fabric:${emi_version}"); break
        case "disabled": break
        default: println("Unknown recipe viewer specified: $recipe_viewer. Must be EMI, REI or disabled.")
    }

    // https://github.com/emilyploszaj/trinkets
    modImplementation ("dev.emi:trinkets:${project.trinkets_version}")

    // https://github.com/OnyxStudios/Cardinal-Components-API/wiki/
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-level:${project.cca_version}")

    modImplementation include("com.github.emilyploszaj:step-height-entity-attribute:${project.step_height_attribute_version}")
    modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}")

    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixin_extras_version}")))

    // https://github.com/Terrails/HealthOverlay
    // Thanks to yurisuika for the head-up (https://github.com/yurisuika/Raised/blob/Fabric-1.19/build.gradle)
    modCompileOnly ("maven.modrinth:colorful-hearts:${project.colorful_hearts_version}") {transitive = false}
    //modLocalRuntime ("maven.modrinth:colorful-hearts:${project.colorful_hearts_version}") {transitive = false}

    // Connect to local dev servers
    modLocalRuntime("curse.maven:authme-356643:4629826")

    // Ears compat by Maya!
    modCompileOnly ("com.unascribed:ears-api:${project.ears_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}